rules_version = '2';

service cloud.firestore {
  	match /databases/{database}/documents {

		// This rule allows anyone with your Firestore database reference to view, edit,
		// and delete all data in your Firestore database. It is useful for getting
		// started, but it is configured to expire after 30 days because it
		// leaves your app open to attackers. At that time, all client
		// requests to your Firestore database will be denied.
		//
		// Make sure to write security rules for your app before that time, or else
		// all client requests to your Firestore database will be denied until you Update
		// your rules

		// request.auth != null // means user must be logged in with Firebase's auth (Google Login)
		// request.auth.uid == {docID} // means user (requester) can only access/edit their own assigned document

		function isAdmin() {
			return request.auth.uid != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
		}

		match /players/{playerID} {
			// User can only read and update their own data
			allow get, update: if request.auth != null && request.auth.uid == playerID;
			// User can only create their own data if they are logged in
			allow create: if request.auth != null;
			// Admins can read and write all players
			allow read, write: if isAdmin();
		}

		// Admins can read, write and delete all admins
		match /admins/{adminID} {
			allow read, write, delete: if isAdmin();
		}
    

  	}
}